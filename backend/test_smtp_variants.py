"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SMTP REG.RU
"""
import asyncio
import aiosmtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart


async def test_smtp_config(server, port, use_tls, start_tls, username, password):
    """–¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SMTP"""
    config_name = f"{server}:{port} (TLS={use_tls}, STARTTLS={start_tls})"
    print(f"\n{'='*60}")
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é: {config_name}")
    print(f"{'='*60}")

    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = MIMEMultipart()
        message["From"] = "info@pressreach.ru"
        message["To"] = "kostya.chuk@yandex.ru"
        message["Subject"] = "Test"
        message.attach(MIMEText("Test message", "plain"))

        print(f"üì° –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ {server}:{port}...")

        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        async with aiosmtplib.SMTP(
            hostname=server,
            port=port,
            use_tls=use_tls,
            timeout=10
        ) as smtp:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

            if start_tls and not use_tls:
                print("üîê –í–∫–ª—é—á–∞—é STARTTLS...")
                await smtp.starttls()
                print("‚úÖ STARTTLS –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

            print(f"üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∫–∞–∫ {username}...")
            await smtp.login(username, password)
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")

            print("üìß –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ...")
            await smtp.send_message(message)
            print("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

            return True

    except asyncio.TimeoutError:
        print(f"‚ùå Timeout - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        return False
    except aiosmtplib.SMTPAuthenticationError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    except aiosmtplib.SMTPException as e:
        print(f"‚ùå SMTP –æ—à–∏–±–∫–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        return False


async def main():
    username = "info@pressreach.ru"
    password = "danmyj-winHoq-6nagby"

    print("="*60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SMTP –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô REG.RU")
    print("="*60)

    # –í–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –¥–ª—è REG.RU
    configs = [
        # –í–∞—Ä–∏–∞–Ω—Ç 1: mail.hosting.reg.ru:465 —Å SSL
        {
            "name": "mail.hosting.reg.ru:465 (SSL)",
            "server": "mail.hosting.reg.ru",
            "port": 465,
            "use_tls": True,
            "start_tls": False
        },
        # –í–∞—Ä–∏–∞–Ω—Ç 2: mail.hosting.reg.ru:587 —Å STARTTLS
        {
            "name": "mail.hosting.reg.ru:587 (STARTTLS)",
            "server": "mail.hosting.reg.ru",
            "port": 587,
            "use_tls": False,
            "start_tls": True
        },
        # –í–∞—Ä–∏–∞–Ω—Ç 3: mail.hosting.reg.ru:25 —Å STARTTLS
        {
            "name": "mail.hosting.reg.ru:25 (STARTTLS)",
            "server": "mail.hosting.reg.ru",
            "port": 25,
            "use_tls": False,
            "start_tls": True
        },
        # –í–∞—Ä–∏–∞–Ω—Ç 4: smtp.reg.ru:465 —Å SSL
        {
            "name": "smtp.reg.ru:465 (SSL)",
            "server": "smtp.reg.ru",
            "port": 465,
            "use_tls": True,
            "start_tls": False
        },
        # –í–∞—Ä–∏–∞–Ω—Ç 5: smtp.reg.ru:587 —Å STARTTLS
        {
            "name": "smtp.reg.ru:587 (STARTTLS)",
            "server": "smtp.reg.ru",
            "port": 587,
            "use_tls": False,
            "start_tls": True
        },
    ]

    results = []

    for config in configs:
        result = await test_smtp_config(
            server=config["server"],
            port=config["port"],
            use_tls=config["use_tls"],
            start_tls=config["start_tls"],
            username=username,
            password=password
        )
        results.append((config["name"], result))

        # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
        await asyncio.sleep(2)

    # –ò—Ç–æ–≥–∏
    print("\n" + "="*60)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("="*60)

    success_count = 0
    for name, success in results:
        status = "‚úÖ –†–ê–ë–û–¢–ê–ï–¢" if success else "‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        print(f"{status} - {name}")
        if success:
            success_count += 1

    print("="*60)
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: {success_count}/{len(results)}")
    print("="*60)

    if success_count > 0:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –≤ .env")
    else:
        print("\n‚ö†Ô∏è  –ù–∏ –æ–¥–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏")
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   - Firewall –±–ª–æ–∫–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥—è—â–∏–µ SMTP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        print("   - ISP –±–ª–æ–∫–∏—Ä—É–µ—Ç SMTP –ø–æ—Ä—Ç—ã (—á–∞—Å—Ç–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞)")
        print("   - –¢—Ä–µ–±—É–µ—Ç—Å—è VPN –∏–ª–∏ —Ä–∞–±–æ—Ç–∞ —Å production —Å–µ—Ä–≤–µ—Ä–∞")


if __name__ == "__main__":
    asyncio.run(main())
